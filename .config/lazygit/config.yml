git:
  fetchAll: false
  autoFetch: false
  autoRefresh: false
  paging:
    colorArg: always
    pager: delta --dark --paging=never
gui:
  nerdFontsVersion: "3"
  theme:
    activeBorderColor:
      - "#ff9e64"
      - "bold"
    inactiveBorderColor:
      - "#27a1b9"
    searchingActiveBorderColor:
      - "#ff9e64"
      - "bold"
    optionsTextColor:
      - "#7aa2f7"
    selectedLineBgColor:
      - "#283457"
    cherryPickedCommitFgColor:
      - "#7aa2f7"
    cherryPickedCommitBgColor:
      - "#bb9af7"
    markedBaseCommitFgColor:
      - "#7aa2f7"
    markedBaseCommitBgColor:
      - "#e0af68"
    unstagedChangesColor:
      - "#db4b4b"
    defaultFgColor:
      - "#c0caf5branch"
  showFileIcons: true
  showDivergenceFromBaseBranch: onlyArrow

os:
  editPreset: nvim

customCommands:
  - key: p
    command: >-
      {{$branch := .CheckedOutBranch.Name}}
      git fetch origin {{$branch}} --prune --prune-tags
      && git rebase origin/{{$branch}} {{$branch}}
    context: global
    description: Fetch and update current branch
    loadingText: Updating checked out branch
  - key: p
    command: >-
      {{$branch := .SelectedLocalBranch.Name}}
      git fetch origin {{$branch}} --prune --prune-tags
      && git rebase origin/{{$branch}} {{$branch}}
    context: localBranches
    description: Fetch and update
    loadingText: Updating selected branch
  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "localBranches"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning old branches..."
  - key: N
    prompts:
      - type: "input"
        title: "Branch name"
        key: "Branch"
    command: >-
      MAIN_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@') &&
      git stash &&
      git fetch origin $MAIN_BRANCH --prune --prune-tags &&
      git rebase origin/$MAIN_BRANCH $MAIN_BRANCH &&
      git checkout -b {{.Form.Branch}}
    context: global
    description: New branch from default
    loadingText: Creating new branch...
